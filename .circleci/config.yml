version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    #working_directory: /home/builder/aosp
    steps:
      - run:
          name: AIO Build
          command: |
            sudo chmod 777 /var/cache/debconf/
            sudo chmod 777 /var/cache/debconf/passwords.dat
            echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
            sudo apt-get -y -q update
            #sudo apt-get -y -q install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lunzip lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python perl git git-lfs libncurses5 xmlstarlet virtualenv xz-utils rr jq
            #sudo fallocate -l 16G /swapfile
            #mkdir -p /tmp/rom
            #cd /tmp/rom
            sudo -E apt-get -qq install git openjdk-8-jdk wget
            git config --global user.email tasinayon9@gmail.com
            git config --global user.name TasinAyon
            git config --global color.ui false
            sudo -E apt install unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract rename
            sudo -E apt install liblzma-dev python3-pip brotli lz4
            pip install --upgrade pip
            pip install backports.lzma protobuf pycrypto twrpdtgen extract-dtb
            git clone --recurse-submodules https://github.com/AndroidDumps/Firmware_extractor.git
            cd Firmware_extractor
            wget https://lavender.automation9914.workers.dev/supercf.7z
            ./extractor.sh supercf.7z
            sudo chmod -R 777 Firmware_extractor/out
            zip -r Firmware_extractor/out/Raw.7z Firmware_extractor/out
            curl --upload-file Firmware_extractor/out/Raw.7z https://transfer.sh/
            #export CCACHE_DIR=/tmp/ccache
            #export CCACHE_EXEC=$(which ccache)
            #export USE_CCACHE=1
            #export SDCLANG_PATH=vendor/qcom/proprietary/llvm-arm-toolchain-ship/8.0/bin
            #ccache -M 20G
            #ccache -o compression=true
            #ccache -z
            

workflows:
  version: 2
  build_and_test:
    jobs:
      - build

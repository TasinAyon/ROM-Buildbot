version: 2.1

jobs:
  build:
    docker:
      - image: fr3akyphantom/droid-builder:latest
    working_directory: /home/builder/aosp
    steps:
      - run:
          name: AIO Build
          command: |
            DEBIAN_FRONTEND=noninteractive sudo apt-get -y update
            DEBIAN_FRONTEND=noninteractive sudo apt-get -y install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lunzip lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python perl git git-lfs libncurses5 xmlstarlet virtualenv xz-utils rr jq
            mkdir -p /tmp/rom
            cd /tmp/rom
            git config --global user.email tasinayon9@gmail.com
            git config --global user.name TasinAyon
            repo init --depth=1 -u https://source.codeaurora.org/quic/la/la/system/manifest/ -b release -m LA.QSSI.11.0.r1-11400-qssi.0.xml
            repo sync -c --force-sync --no-tags --no-clone-bundle -j$(nproc --all) || repo sync -c --force-sync --no-tags --no-clone-bundle -j8
            git clone https://github.com/TasinAyon/vendor_qcom_proprietary --depth=1 vendor/qcom/proprietary/
            . build/envsetup.sh
            lunch qssi
            export CCACHE_DIR=/tmp/ccache
            export CCACHE_EXEC=$(which ccache)
            export USE_CCACHE=1
            export SDCLANG_PATH=vendor/qcom/proprietary/llvm-arm-toolchain-ship/8.0/bin
            ccache -M 20G
            ccache -o compression=true
            ccache -z
            WITHOUT_CHECK_API=true make systemimage
            zip -r out/target/product/qssi/system.7z out/target/product/qssi/system*.img
            curl -sL https://git.io/file-transfer | sh
            ./transfer wet out/target/product/qssi/system.7z
            echo " "

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
